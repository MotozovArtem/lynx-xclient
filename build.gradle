plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id 'org.jetbrains.kotlin.jvm' version '1.6.20'
    id 'idea'
    id 'java'
    id 'application'
}

group = 'org.lynx'
version = '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'application'

repositories {
    mavenCentral()
}

idea {
    module {
        downloadJavadoc = true
    }
}

application {
    mainClass = "org.lynx.ApplicationKt"
}

dependencies {
    // TornadoFX
    implementation 'no.tornado:tornadofx:1.7.20'

    // ControlsFX
    implementation 'org.controlsfx:controlsfx:8.0.5'

    // JetBrains Kotlin Exposed
    implementation 'org.jetbrains.exposed:exposed-core:0.38.2'
    implementation 'org.jetbrains.exposed:exposed-dao:0.38.2'
    implementation 'org.jetbrains.exposed:exposed-jdbc:0.38.2'
    implementation 'org.jetbrains.exposed:exposed-java-time:0.38.2'

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-javafx:1.6.1'

    // NanoHTTPD
    implementation 'org.nanohttpd:nanohttpd:2.3.1'

    // Retrofit
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'

    // Google Guice
    implementation 'com.google.inject:guice:5.1.0'

    // Logging slf4j
    implementation 'ch.qos.logback:logback-core:1.2.11'
    implementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation 'org.slf4j:slf4j-api:1.7.36'

    // SQLite3 JDBC driver
    implementation 'org.xerial:sqlite-jdbc:3.36.0.3'

    // Google Tink
    implementation 'com.google.crypto.tink:tink-android:1.6.1'

    // Kotlin testing
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
}

test {
    useJUnitPlatform()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

//jar {
//    manifest {
//        attributes(
//                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
//                'Main-Class': 'org.lynx.ApplicationKt'
//        )
//    }
//    from (configurations.compile.collect { entry -> zipTree(entry) }) {
//        exclude 'META-INF/MANIFEST.MF'
//        exclude 'META-INF/*.SF'
//        exclude 'META-INF/*.DSA'
//        exclude 'META-INF/*.RSA'
//    }
//}